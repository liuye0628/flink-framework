package com.atguigu.javase.i_socket;

/**
 * 网络编程
 */
public class $01_SocktStruct {
    /**
     * 1.软件结构
     * ·C/S结构: 全称为Client/Server结构,是指客户端与服务端结构,常见程序有QQ,红蜘蛛,飞秋等软件
     * ·B/S结构: 全称为Browser/Server结构,是指浏览器与服务器结构,常见浏览器有IE,谷歌,火狐等
     * 两种结构各有优势,但是无论哪种架构,都离不开网络的支持,网络编程,就是在一定的协议下,实现两台计算机通信的程序
     */

    /**
     * 2.网络通信协议
     * ①TCP/IP协议参考模型
     * ·网络通信协议:通过计算机网络可以使多台计算机实现连接,位于同一个网络中的计算机在进行连接和通信时要遵守一定的规则,这就好比在道路中行驶的汽车一定要遵守
     * 交通规则一样,在计算机网络中,这些连接和通信的协议被称为网络通信协议,它对数据的传输格式,传输速率,传输步骤等做了统一规定,通信双方必须同时遵守才能完成数据交换
     * ·TCP/IP协议:传输控制协议/因特网互联协议(Transmission Control Protocol/Internet Protocol),是Internet最基本,最广泛的协议,它定义了计算机如何连接因特网,
     * 以及数据如何在它们之间传输的标准,它的内部包含一系列的用于处理数据通信的协议,并采用4层的分层模型,每一层都呼叫它的下一层所提供的协议来完成自己的需求
     * TCP/IP协议中的四层分别是应用层,传输层,网络层和链路层,每层分别负责不同的通信功能
     *  ·链路层:链路层是用于定义物理传输通道,通常是对某些网络连接设备的驱动协议,例如针对光纤,网线提供的驱动
     *  ·网络层:网络层是整个TCP/IP协议的核心,它主要用于将传输的数据进行分组,将分组的数据发送到目标计算机或者网络,而IP协议是一种非常重要的协议,IP(Internet protocol)又
     *  称为互联网协议,IP的责任就是把数据从源传输到目的地,它在源地址和目的地址之间传送一种称之为数据包的东西,它还提供对数据大小的重新组装功能,以适应不同网络对包大小的要求
     *  ·传输层:主要使网络程序进行通信,在进行网络通信时,可以采用TCP协议,也可以采用UDP协议,TCP(Transmission Control Protocol)协议,即传输控制协议,是一种面向连接的,可靠的
     *  基于字节流的传输层通信协议,UDP(User Datagram Protocol)协议,即用户数据报协议,是一个无连接的传输层协议,提供面向事务的简单不可靠的信息传送服务
     *  ·应用层:主要负责应用程序的协议,例如HTTP协议,FTP协议等
     * 而我们通常所说的TCP/IP协议,其实是TCP/IP协议族,因为该协议家族的两个最核心协议:TCP(传输控制协议)和IP(网际协议),为该家族最早通过的标准,所以简称为TCP/IP协议
     */
}
