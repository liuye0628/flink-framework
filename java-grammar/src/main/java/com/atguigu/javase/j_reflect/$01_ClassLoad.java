package com.atguigu.javase.j_reflect;
/*
类加载:类在内存中的生命周期: 加载->使用->卸载
1.类的加载过程: 当程序主动使用某个类时,如果该类还未加载到内存里,系统会通过加载,链接,初始化三个步骤来对该类进行初始化,如果没有意外,JVM会
连续完成这三个步骤,所以有时也会把这三个步骤统称为类加载,主要分为三个阶段:
    ①加载:load,就是指将类型的class字节码数据读入内存
    ②链接:link
        ·验证:校验被加载的class文件的合法性,并且不会危害虚拟机的自身安全(文件格式验证,语义分析等)
        ·准备:为类变量分配内存(在方法区中),并设置初始值(0,null,false),为静态常量赋初始值(常量池中)
            比如: public static int sector = 3;类变量在此阶段会被设置初始值为0,而不是3
            public static final int number = 3;静态常量在此阶段会被设置为3
        ·解析:把字节码中的符号引用替换为对应的直接地址引用
            符号引用就是一组符号来描述目标,可以是任何字面量
            直接引用就是直接指向目标的指针,相对偏移量或一个间接定位到目标的句柄
    ③初始化:initialize
        ·为类的静态变量赋予正确的初始值,JVM负责对类进行初始化,主要对类变量进行初始化,类初始化执行的是(),该方法会执行1.类变量的显式赋值代码
        2.静态代码块中的代码,用于给类变量初始化值
 */
public class $01_ClassLoad {
}
